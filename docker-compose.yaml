version: "3.9"

services:
  postgres:
    image: postgres:15.4
    volumes:
      - .volumes/pg_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: library
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    networks:
      - app-network
    restart: always

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "80:80"
    networks:
      - app-network
    restart: always
    depends_on:
      - postgres

  redis:
    image: "redis:alpine"
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - app-network
    restart: always


  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    networks:
      - app-network
    restart: always
    ports:
      - 2181:2181

  kafka:
    image: wurstmeister/kafka
    container_name: kafka
    restart: always
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    expose:
      - "9093"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - app-network
    environment:
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://kafka:9092 #INSIDE://kafka:9093,OUTSIDE://localhost:9092 || INSIDE://kafka:9093,OUTSIDE://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181

#  application:
#    build: .
#    container_name: cash
#    environment:
#      SPRING_DATASOURCE_USERNAME: postgres
#      SPRING_DATASOURCE_PASSWORD: postgres
#      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres/restaurant
#      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
#    depends_on:
#      postgres:
#        condition: service_started
#      kafka:
#        condition: service_started
#    ports:
#      - "8080:8080"
#    networks:
#      - app-network
#    restart: always

networks:
  app-network:
    driver: bridge
